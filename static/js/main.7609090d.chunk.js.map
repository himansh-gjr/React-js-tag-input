{"version":3,"sources":["TagInput.js","App.js","reportWebVitals.js","index.js"],"names":["TagInput","useState","tag","setTag","tags","setTags","suggestions","setSuggestions","display","setDisplay","className","map","index","onClick","filter","indexOf","removeTags","style","fontSize","marginLeft","cursor","value","onKeyUp","event","newTags","target","key","includes","newSuggestions","Set","addTags","placeholder","type","onChange","e","length","regex","RegExp","sort","v","test","onFocus","onBlur","jsx","require","default","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAkKeA,UA/JE,WACf,MAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAmEA,OACE,qCACE,sBAAKC,UAAU,mBAAf,UACE,qBAAIA,UAAU,cAAd,UACGN,EAAKO,KAAI,SAACT,EAAKU,GAAN,OACR,qBACEF,UAAU,oFADZ,UAIE,+BAAOR,IACP,mBAAGQ,UAAU,SAAb,SACE,cAAC,IAAD,CACEG,QAAS,kBA9CN,SAACD,GAClBP,EAAQ,YAAID,EAAKU,QAAO,SAACZ,GAAD,OAASE,EAAKW,QAAQb,KAASU,OA6C1BI,CAAWJ,IAC1BK,MAAO,CACLC,SAAU,MACVC,WAAY,OACZC,OAAQ,iBATTR,MAeT,oBAAIF,UAAU,aAAd,SACE,uBACEW,MAAOnB,EACPoB,QAAS,SAACC,GAAD,OA/EL,SAACA,GACf,IAAMC,EAAO,sBAAOpB,GAAP,CAAamB,EAAME,OAAOJ,QACvC,IACiB,UAAdE,EAAMG,KAAiC,UAAdH,EAAMG,MACT,KAAvBH,EAAME,OAAOJ,QACZjB,EAAKuB,SAASJ,EAAME,OAAOJ,OAC5B,CACAhB,EAAQmB,GACR,IAAII,EAAc,sBAAOtB,GAAP,YAAuBkB,IACzCI,EAAc,YAAO,IAAIC,IAAID,IAC7BrB,EAAeqB,GACfzB,EAAO,KAoEqB2B,CAAQP,IAC5BQ,YAAY,WACZC,KAAK,OACLC,SA7Fc,SAACC,GACzB,IAAMb,EAAQa,EAAET,OAAOJ,MACnBf,EAAc,GAClB,GAAIe,EAAMc,OAAS,EAAG,CACpB,IAAMC,EAAQ,IAAIC,OAAJ,WAAehB,GAAS,KACtCf,EAAcF,EAAKkC,OAAOxB,QAAO,SAACyB,GAAD,OAAOH,EAAMI,KAAKD,MAErDhC,EAAeD,GACfH,EAAOkB,IAsFGoB,QA3DQ,WAClBhC,GAAYD,IA2DFkC,OAxDO,WACjBjC,GAAYD,WA2DR,uBAAOmC,KAAG,EAAV,mrCAvDuB,IAAvBrC,EAAY6B,OACP,KAGP3B,GACE,qBAAKE,UAAU,kBAAf,SACE,6BACGJ,EAAYK,KAAI,SAACT,GAAD,OACf,oBACEQ,UAAU,aACVG,QAAS,SAACqB,GA3BtB/B,EA2B+CD,IAFrC,SAIGA,gB,0FC/DAF,EAAa4C,EAAQ,IAA9BC,QAmDOC,MAjDf,WACE,OACE,qCACE,sBAAKpC,UAAU,mEAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sCACA,mBAAGA,UAAU,UAAb,2CAEF,qBAAKA,UAAU,wBAAf,SACE,cAACV,EAAD,SAGJ,uBAAO2C,KAAG,EAAV,yyBCJSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7609090d.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst TagInput = () => {\n  const [tag, setTag] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [display, setDisplay] = useState(false);\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    let suggestions = [];\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, \"i\");\n      suggestions = tags.sort().filter((v) => regex.test(v));\n    }\n    setSuggestions(suggestions);\n    setTag(value);\n  };\n\n  const addTags = (event) => {\n    const newTags = [...tags, event.target.value];\n    if (\n      (event.key === \"Enter\" || event.key === \"Space\") &&\n      event.target.value !== \"\" &&\n      !tags.includes(event.target.value)\n    ) {\n      setTags(newTags);\n      let newSuggestions = [...suggestions, ...newTags];\n      newSuggestions = [...new Set(newSuggestions)];\n      setSuggestions(newSuggestions);\n      setTag(\"\");\n    }\n  };\n\n  const suggestionSelected = (value) => {\n    setTag(value);\n    // setSuggestions([]);\n  };\n\n  const removeTags = (index) => {\n    setTags([...tags.filter((tag) => tags.indexOf(tag) !== index)]);\n  };\n\n  const handleFocus = () => {\n    setDisplay(!display);\n  };\n\n  const handleBlur = () => {\n    setDisplay(!display);\n  };\n\n  const renderSuggestions = () => {\n    if (suggestions.length === 0) {\n      return null;\n    }\n    return (\n      display && (\n        <div className=\"suggestions-div\">\n          <ul>\n            {suggestions.map((tag) => (\n              <li\n                className=\"suggestion\"\n                onClick={(e) => suggestionSelected(tag)}\n              >\n                {tag}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )\n    );\n  };\n\n  return (\n    <>\n      <div className=\"input__tags__div\">\n        <ul className=\"input__tags\">\n          {tags.map((tag, index) => (\n            <li\n              className=\"px-2 py-1 tags d-inline-flex align-items-center justify-content-between mb-2 mr-2\"\n              key={index}\n            >\n              <span>{tag}</span>\n              <i className=\"d-flex\">\n                <ClearIcon\n                  onClick={() => removeTags(index)}\n                  style={{\n                    fontSize: \"3vw\",\n                    marginLeft: \"10px\",\n                    cursor: \"pointer\",\n                  }}\n                />\n              </i>\n            </li>\n          ))}\n          <li className=\"input__tag\">\n            <input\n              value={tag}\n              onKeyUp={(event) => addTags(event)}\n              placeholder=\"Add Tags\"\n              type=\"text\"\n              onChange={handleInputChange}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n            />\n          </li>\n        </ul>\n        <style jsx>\n          {`\n            i {\n              cursor: pointer;\n            }\n            .input__tags__div {\n              display: flex;\n              justify-content: center;\n              width: 100%;\n              min-height: 100px;\n              height: auto;\n              background: #ebebeb;\n              margin: 15px 0px;\n              padding: 10px 20px;\n              border-radius: 3px;\n            }\n            li {\n              list-style: none;\n            }\n\n            input {\n              border: none;\n              background: #ebebeb;\n            }\n\n            .input__tags {\n              width: 100%;\n              height: 100%;\n              padding: 0%;\n            }\n            .input__tag {\n              display: inline;\n            }\n            .input__tag input {\n              border: none;\n              outline: none;\n            }\n            .tags {\n              background: #ffffff;\n              border-radius: 2px;\n              font-family: \"Noto Sans\";\n              font-size: 14px;\n              font-weight: 400;\n              font-style: normal;\n              line-height: 23px;\n            }\n          `}\n        </style>\n      </div>\n      {renderSuggestions()}\n    </>\n  );\n};\n\nexport default TagInput;\n","import { useState } from \"react\";\nimport \"./App.css\";\nconst { default: TagInput } = require(\"./TagInput\");\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App d-flex flex-column justify-centent-center align-items-center\">\n        <div className=\"tag__container\">\n          <h2>Tags</h2>\n          <p className=\"m-0 p-0\">Select time for your event</p>\n        </div>\n        <div className=\"tag__container__input\">\n          <TagInput />\n        </div>\n      </div>\n      <style jsx>\n        {`\n          .App {\n            padding: 27px 0;\n          }\n          .tag__container {\n            width: 90%;\n          }\n          .tag__container__input {\n            width: 90%;\n          }\n          h2 {\n            font-family: \"Noto Sans\";\n            font-weight: 700;\n            font-size: 12.8px;\n            line-height: 21px;\n            letter-spacing: 0.1em;\n            text-transform: uppercase;\n            color: #747474;\n            margin: 10px 0px;\n          }\n          p {\n            font-family: \"Noto Sans\";\n            top: 32px;\n            font-style: italic;\n            font-weight: normal;\n            font-size: 14px;\n            line-height: 19px;\n            color: #606060;\n            margin: 10px 0px;\n          }\n        `}\n      </style>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}